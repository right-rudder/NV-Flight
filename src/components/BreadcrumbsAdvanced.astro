---
import type { BreadcrumbItem } from "../utils/breadcrumbs";

interface Props {
  items: BreadcrumbItem[];
  variant?: "default" | "compact" | "minimal";
  showHomeIcon?: boolean;
  className?: string;
}

const {
  items,
  variant = "default",
  showHomeIcon = true,
  className = "",
} = Astro.props;

// Style variants
const variants = {
  default: {
    nav: "flex",
    ol: "inline-flex items-center space-x-1 md:space-x-2 rtl:space-x-reverse",
    separator: "rtl:rotate-180 w-3 h-3 text-gray-400 mx-1",
    link: "inline-flex items-center text-sm font-medium text-gray-700 hover:text-primary-600 dark:text-gray-400 dark:hover:text-white transition-colors duration-200",
    current:
      "ms-1 text-sm font-medium text-gray-500 md:ms-2 dark:text-gray-400",
    homeIcon: "w-3 h-3 me-2.5",
  },
  compact: {
    nav: "flex",
    ol: "inline-flex items-center space-x-1 rtl:space-x-reverse",
    separator: "rtl:rotate-180 w-2.5 h-2.5 text-gray-400 mx-0.5",
    link: "inline-flex items-center text-xs font-medium text-gray-600 hover:text-primary-600 transition-colors duration-200",
    current: "ms-1 text-xs font-medium text-gray-500 dark:text-gray-400",
    homeIcon: "w-2.5 h-2.5 me-1.5",
  },
  minimal: {
    nav: "flex",
    ol: "inline-flex items-center space-x-2 rtl:space-x-reverse",
    separator: "text-gray-400 mx-1",
    link: "text-sm text-gray-600 hover:text-primary-600 transition-colors duration-200 no-underline",
    current: "text-sm text-gray-500",
    homeIcon: "w-3 h-3 me-1.5",
  },
};

const styles = variants[variant];
---

<nav class={`${styles.nav} ${className}`} aria-label="Breadcrumb">
  <ol class={styles.ol}>
    {
      items.map((item, index) => (
        <li class="inline-flex items-center">
          {index > 0 && variant !== "minimal" && (
            <svg
              class={styles.separator}
              aria-hidden="true"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 6 10"
            >
              <path
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="m1 9 4-4-4-4"
              />
            </svg>
          )}

          {index > 0 && variant === "minimal" && (
            <span class={styles.separator}>/</span>
          )}

          {item.current ? (
            <span class={styles.current} aria-current="page">
              {item.name}
            </span>
          ) : (
            <a href={item.url} class={styles.link}>
              {index === 0 && showHomeIcon && (
                <svg
                  class={styles.homeIcon}
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                >
                  <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z" />
                </svg>
              )}
              {item.name}
            </a>
          )}
        </li>
      ))
    }
  </ol>
</nav>

<style>
  /* Ensure proper spacing and alignment */
  nav ol {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  /* Remove default link underlines */
  nav a {
    text-decoration: none;
  }

  /* Mobile responsiveness */
  @media (max-width: 640px) {
    .inline-flex.items-center.space-x-1,
    .inline-flex.items-center.space-x-2 {
      flex-wrap: wrap;
      gap: 0.25rem;
    }

    /* Slightly smaller text on mobile */
    .text-sm {
      font-size: 0.8rem;
    }

    .text-xs {
      font-size: 0.7rem;
    }
  }

  /* Focus states for accessibility */
  nav a:focus {
    outline: 2px solid theme(colors.primary.500);
    outline-offset: 2px;
    border-radius: 2px;
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    nav a {
      text-decoration: underline;
    }

    nav .text-gray-400,
    nav .text-gray-500,
    nav .text-gray-600,
    nav .text-gray-700 {
      color: black;
    }

    @media (prefers-color-scheme: dark) {
      nav .text-gray-400,
      nav .text-gray-500,
      nav .text-gray-600,
      nav .text-gray-700 {
        color: white;
      }
    }
  }
</style>
