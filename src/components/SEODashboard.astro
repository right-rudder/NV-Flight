---
import { SEOAnalyzer, SEOReporter, SEODevTools } from "../utils/seo-helper";

interface Props {
  content: string;
  pageType: "homepage" | "programs" | "discovery" | "about" | "contact" | "blog";
  metadata: {
    title?: string;
    description?: string;
    keywords?: string;
  };
  showInDev?: boolean;
}

const {
  content,
  pageType,
  metadata,
  showInDev = true
} = Astro.props;

// Perform SEO analysis
const analysis = SEOAnalyzer.analyzePage(content, { ...metadata, pageType });
const dashboardData = SEODevTools.getDashboardData(analysis);

// Development logging
if (import.meta.env.DEV && showInDev) {
  SEODevTools.logAnalysis(analysis, pageType);
  
  console.log("üìã SEO Checklist:", dashboardData.checklist);
  
  if (analysis.score < 70) {
    console.warn(`‚ö†Ô∏è SEO Score Below Threshold: ${analysis.score}/100`);
    console.log("üí° Priority Fixes:", analysis.recommendations.slice(0, 3));
  }
}

// Make analysis available globally for debugging
if (typeof global !== 'undefined') {
  (global as any).seoAnalysis = { analysis, dashboardData };
}
---

<!-- SEO Dashboard - Only visible in development -->
{import.meta.env.DEV && showInDev && (
  <div 
    id="seo-dashboard" 
    style="
      position: fixed;
      bottom: 20px;
      right: 20px;
      width: 320px;
      max-height: 500px;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      border: 1px solid #e5e7eb;
      border-radius: 12px;
      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      font-size: 13px;
      z-index: 9999;
      color: white;
      overflow: hidden;
    "
  >
    <!-- Header -->
    <div style="
      padding: 12px 16px;
      border-bottom: 1px solid rgba(255, 255, 255, 0.2);
      display: flex;
      justify-content: space-between;
      align-items: center;
    ">
      <div style="display: flex; align-items: center; gap: 8px;">
        <div style="font-weight: 600; font-size: 14px;">üîç SEO Dashboard</div>
        <div style="
          background: rgba(255, 255, 255, 0.2);
          padding: 2px 6px;
          border-radius: 4px;
          font-size: 11px;
          font-weight: 500;
        ">{pageType}</div>
      </div>
      <button
        onclick="document.getElementById('seo-dashboard').style.display = 'none'"
        style="
          background: none;
          border: none;
          color: rgba(255, 255, 255, 0.8);
          cursor: pointer;
          font-size: 18px;
          padding: 0;
          width: 20px;
          height: 20px;
        "
      >√ó</button>
    </div>

    <!-- Score Display -->
    <div style="padding: 16px; text-align: center; border-bottom: 1px solid rgba(255, 255, 255, 0.2);">
      <div style="font-size: 32px; font-weight: bold; margin-bottom: 4px;">
        {analysis.score}/100
      </div>
      <div style="
        font-size: 16px;
        font-weight: 600;
        padding: 4px 12px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 20px;
        display: inline-block;
      ">
        Grade: {analysis.grade}
      </div>
    </div>

    <!-- Metrics -->
    <div style="padding: 16px; max-height: 200px; overflow-y: auto;">
      <div style="font-weight: 600; margin-bottom: 12px; opacity: 0.9;">Key Metrics</div>
      {dashboardData.metrics.map((metric) => (
        <div style="
          display: flex;
          justify-content: space-between;
          align-items: center;
          margin-bottom: 8px;
          padding: 6px 0;
        ">
          <span style="opacity: 0.9; font-size: 12px;">{metric.label}</span>
          <span style="font-weight: 600;">
            {typeof metric.value === 'number' ? metric.value.toFixed(1) : metric.value}
            <span style="opacity: 0.7; font-size: 11px; margin-left: 2px;">{metric.unit}</span>
          </span>
        </div>
      ))}
    </div>

    <!-- Issues & Recommendations -->
    {(analysis.issues.length > 0 || analysis.recommendations.length > 0) && (
      <div style="
        padding: 16px;
        border-top: 1px solid rgba(255, 255, 255, 0.2);
        max-height: 150px;
        overflow-y: auto;
      ">
        {analysis.issues.length > 0 && (
          <div style="margin-bottom: 12px;">
            <div style="font-weight: 600; margin-bottom: 6px; color: #fbbf24;">‚ö†Ô∏è Issues</div>
            {analysis.issues.slice(0, 3).map((issue) => (
              <div style="
                font-size: 11px;
                opacity: 0.9;
                margin-bottom: 4px;
                line-height: 1.4;
              ">‚Ä¢ {issue}</div>
            ))}
          </div>
        )}
        
        {analysis.recommendations.length > 0 && (
          <div>
            <div style="font-weight: 600; margin-bottom: 6px; color: #60a5fa;">üí° Top Fixes</div>
            {analysis.recommendations.slice(0, 2).map((rec) => (
              <div style="
                font-size: 11px;
                opacity: 0.9;
                margin-bottom: 4px;
                line-height: 1.4;
              ">‚Ä¢ {rec}</div>
            ))}
          </div>
        )}
      </div>
    )}

    <!-- Quick Actions -->
    <div style="
      padding: 12px 16px;
      border-top: 1px solid rgba(255, 255, 255, 0.2);
      background: rgba(0, 0, 0, 0.1);
      display: flex;
      gap: 8px;
    ">
      <button
        onclick="console.log('SEO Analysis:', window.seoAnalysis)"
        style="
          background: rgba(255, 255, 255, 0.2);
          border: none;
          color: white;
          padding: 6px 12px;
          border-radius: 6px;
          font-size: 11px;
          cursor: pointer;
          flex: 1;
        "
      >View Details</button>
      <button
        onclick={`navigator.clipboard.writeText('${Astro.url}\\n\\nSEO Score: ${analysis.score}/100\\nGrade: ${analysis.grade}\\n\\nTop Issues:\\n${analysis.issues.slice(0, 3).join('\\n')}')`}
        style="
          background: rgba(255, 255, 255, 0.2);
          border: none;
          color: white;
          padding: 6px 12px;
          border-radius: 6px;
          font-size: 11px;
          cursor: pointer;
          flex: 1;
        "
      >Copy Report</button>
    </div>
  </div>
)}

<!-- Make data available for debugging -->
<script is:inline define:vars={{ analysis, dashboardData }}>
  if (typeof window !== 'undefined' && window.location.hostname === 'localhost') {
    window.seoAnalysis = { analysis, dashboardData };
    
    // Auto-refresh dashboard when content changes (for development)
    const observer = new MutationObserver(() => {
      if (window.seoAnalysis) {
        console.log('üîÑ Content changed - SEO data available in window.seoAnalysis');
      }
    });
    
    observer.observe(document.body, { childList: true, subtree: true });
  }
</script>

<style>
  /* Hidden in production */
  #seo-dashboard {
    display: none;
  }
  
  @media (max-width: 768px) {
    #seo-dashboard {
      width: 280px !important;
      bottom: 10px !important;
      right: 10px !important;
    }
  }
</style>
